{
<<<<<<< HEAD
  "_from": "makeerror@1.0.x",
  "_id": "makeerror@1.0.11",
  "_inBundle": false,
  "_integrity": "sha1-4BpckQnyr3lmDk6LlYd5AYT1qWw=",
  "_location": "/makeerror",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "makeerror@1.0.x",
    "name": "makeerror",
    "escapedName": "makeerror",
    "rawSpec": "1.0.x",
    "saveSpec": null,
    "fetchSpec": "1.0.x"
=======
  "_args": [
    [
      {
        "raw": "makeerror@1.0.x",
        "scope": null,
        "escapedName": "makeerror",
        "name": "makeerror",
        "rawSpec": "1.0.x",
        "spec": ">=1.0.0 <1.1.0",
        "type": "range"
      },
      "D:\\Internship\\Neo Fusion projek\\Projek 1\\ReactTwitterAPI\\node_modules\\walker"
    ]
  ],
  "_from": "makeerror@>=1.0.0 <1.1.0",
  "_id": "makeerror@1.0.11",
  "_inCache": true,
  "_location": "/makeerror",
  "_nodeVersion": "0.12.0",
  "_npmUser": {
    "name": "daaku",
    "email": "n@daaku.org"
  },
  "_npmVersion": "2.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "makeerror@1.0.x",
    "scope": null,
    "escapedName": "makeerror",
    "name": "makeerror",
    "rawSpec": "1.0.x",
    "spec": ">=1.0.0 <1.1.0",
    "type": "range"
>>>>>>> 4d5d4f825458d1a31f0677618205bd759befa9d6
  },
  "_requiredBy": [
    "/walker"
  ],
  "_resolved": "https://registry.npmjs.org/makeerror/-/makeerror-1.0.11.tgz",
  "_shasum": "e01a5c9109f2af79660e4e8b9587790184f5a96c",
<<<<<<< HEAD
  "_spec": "makeerror@1.0.x",
  "_where": "D:\\Neo-Fusion\\ReactJS\\TestProject\\node_modules\\walker",
=======
  "_shrinkwrap": null,
  "_spec": "makeerror@1.0.x",
  "_where": "D:\\Internship\\Neo Fusion projek\\Projek 1\\ReactTwitterAPI\\node_modules\\walker",
>>>>>>> 4d5d4f825458d1a31f0677618205bd759befa9d6
  "author": {
    "name": "Naitik Shah",
    "email": "n@daaku.org"
  },
  "bugs": {
    "url": "https://github.com/daaku/nodejs-makeerror/issues"
  },
<<<<<<< HEAD
  "bundleDependencies": false,
  "dependencies": {
    "tmpl": "1.0.x"
  },
  "deprecated": false,
=======
  "dependencies": {
    "tmpl": "1.0.x"
  },
>>>>>>> 4d5d4f825458d1a31f0677618205bd759befa9d6
  "description": "A library to make errors.",
  "devDependencies": {
    "mocha": "0.12.x"
  },
<<<<<<< HEAD
  "homepage": "https://github.com/daaku/nodejs-makeerror#readme",
  "license": "BSD-3-Clause",
  "main": "lib/makeerror",
  "name": "makeerror",
=======
  "directories": {},
  "dist": {
    "shasum": "e01a5c9109f2af79660e4e8b9587790184f5a96c",
    "tarball": "https://registry.npmjs.org/makeerror/-/makeerror-1.0.11.tgz"
  },
  "gitHead": "06a15302cb11eb649a94ac0db6492c6e5eceb940",
  "homepage": "https://github.com/daaku/nodejs-makeerror#readme",
  "license": "BSD-3-Clause",
  "main": "lib/makeerror",
  "maintainers": [
    {
      "name": "daaku",
      "email": "n@daaku.org"
    }
  ],
  "name": "makeerror",
  "optionalDependencies": {},
  "readme": "makeerror [![Build Status](https://secure.travis-ci.org/nshah/nodejs-makeerror.png)](http://travis-ci.org/nshah/nodejs-makeerror)\n=========\n\nA library to make errors.\n\n\nBasics\n------\n\nMakes an Error constructor function with the signature below. All arguments are\noptional, and if the first argument is not a `String`, it will be assumed to be\n`data`:\n\n```javascript\nfunction(message, data)\n```\n\nYou'll typically do something like:\n\n```javascript\nvar makeError = require('makeerror')\nvar UnknownFileTypeError = makeError(\n  'UnknownFileTypeError',\n  'The specified type is not known.'\n)\nvar er = UnknownFileTypeError()\n```\n\n`er` will have a prototype chain that ensures:\n\n```javascript\ner instanceof UnknownFileTypeError\ner instanceof Error\n```\n\n\nTemplatized Error Messages\n--------------------------\n\nThere is support for simple string substitutions like:\n\n```javascript\nvar makeError = require('makeerror')\nvar UnknownFileTypeError = makeError(\n  'UnknownFileTypeError',\n  'The specified type \"{type}\" is not known.'\n)\nvar er = UnknownFileTypeError({ type: 'bmp' })\n```\n\nNow `er.message` or `er.toString()` will return `'The specified type \"bmp\" is\nnot known.'`.\n\n\nPrototype Hierarchies\n---------------------\n\nYou can create simple hierarchies as well using the `prototype` chain:\n\n```javascript\nvar makeError = require('makeerror')\nvar ParentError = makeError('ParentError')\nvar ChildError = makeError(\n  'ChildError',\n  'The child error.',\n  { proto: ParentError() }\n)\nvar er = ChildError()\n```\n\n`er` will have a prototype chain that ensures:\n\n```javascript\ner instanceof ChildError\ner instanceof ParentError\ner instanceof Error\n```\n",
  "readmeFilename": "readme.md",
>>>>>>> 4d5d4f825458d1a31f0677618205bd759befa9d6
  "repository": {
    "type": "git",
    "url": "git+https://github.com/daaku/nodejs-makeerror.git"
  },
  "scripts": {
    "test": "NODE_PATH=./lib mocha --ui exports"
  },
  "version": "1.0.11"
}
