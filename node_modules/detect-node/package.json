{
<<<<<<< HEAD
  "_from": "detect-node@^2.0.3",
  "_id": "detect-node@2.0.3",
  "_inBundle": false,
  "_integrity": "sha1-ogM8CcyOFY03dI+951B4Mr1s4Sc=",
  "_location": "/detect-node",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "detect-node@^2.0.3",
    "name": "detect-node",
    "escapedName": "detect-node",
    "rawSpec": "^2.0.3",
    "saveSpec": null,
    "fetchSpec": "^2.0.3"
=======
  "_args": [
    [
      {
        "raw": "detect-node@^2.0.3",
        "scope": null,
        "escapedName": "detect-node",
        "name": "detect-node",
        "rawSpec": "^2.0.3",
        "spec": ">=2.0.3 <3.0.0",
        "type": "range"
      },
      "D:\\Internship\\Neo Fusion projek\\Projek 1\\ReactTwitterAPI\\node_modules\\spdy-transport"
    ]
  ],
  "_from": "detect-node@>=2.0.3 <3.0.0",
  "_id": "detect-node@2.0.3",
  "_inCache": true,
  "_location": "/detect-node",
  "_npmUser": {
    "name": "iliakan",
    "email": "iliakan@gmail.com"
  },
  "_npmVersion": "1.4.21",
  "_phantomChildren": {},
  "_requested": {
    "raw": "detect-node@^2.0.3",
    "scope": null,
    "escapedName": "detect-node",
    "name": "detect-node",
    "rawSpec": "^2.0.3",
    "spec": ">=2.0.3 <3.0.0",
    "type": "range"
>>>>>>> 4d5d4f825458d1a31f0677618205bd759befa9d6
  },
  "_requiredBy": [
    "/spdy-transport"
  ],
  "_resolved": "https://registry.npmjs.org/detect-node/-/detect-node-2.0.3.tgz",
  "_shasum": "a2033c09cc8e158d37748fbde7507832bd6ce127",
<<<<<<< HEAD
  "_spec": "detect-node@^2.0.3",
  "_where": "D:\\Neo-Fusion\\ReactJS\\TestProject\\node_modules\\spdy-transport",
=======
  "_shrinkwrap": null,
  "_spec": "detect-node@^2.0.3",
  "_where": "D:\\Internship\\Neo Fusion projek\\Projek 1\\ReactTwitterAPI\\node_modules\\spdy-transport",
>>>>>>> 4d5d4f825458d1a31f0677618205bd759befa9d6
  "author": {
    "name": "Ilya Kantor"
  },
  "bugs": {
    "url": "https://github.com/iliakan/detect-node/issues"
  },
<<<<<<< HEAD
  "bundleDependencies": false,
  "deprecated": false,
  "description": "Detect Node.JS (as opposite to browser environment) (reliable)",
=======
  "dependencies": {},
  "description": "Detect Node.JS (as opposite to browser environment) (reliable)",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "a2033c09cc8e158d37748fbde7507832bd6ce127",
    "tarball": "https://registry.npmjs.org/detect-node/-/detect-node-2.0.3.tgz"
  },
  "gitHead": "4837fa0620d2e8db948a718a8b5f89a8073c8ff4",
>>>>>>> 4d5d4f825458d1a31f0677618205bd759befa9d6
  "homepage": "https://github.com/iliakan/detect-node",
  "keywords": [
    "detect",
    "node"
  ],
  "license": "ISC",
  "main": "index.js",
<<<<<<< HEAD
  "name": "detect-node",
=======
  "maintainers": [
    {
      "name": "iliakan",
      "email": "iliakan@gmail.com"
    }
  ],
  "name": "detect-node",
  "optionalDependencies": {},
  "readme": "Usage:\n```js\nvar isNode = require('detect-node');\n\nif (isNode) {\n  console.log(\"Running under Node.JS\");\n} else {\n  alert(\"Hello from browser (or whatever not-a-node env)\");\n}\n```\n\nThe check is performed as:\n```js\nmodule.exports = false;\n\n// Only Node.JS has a process variable that is of [[Class]] process\ntry {\n module.exports = Object.prototype.toString.call(global.process) === '[object process]' \n} catch(e) {}\n\n```\n\nThanks to Ingvar Stepanyan for the initial idea. This check is both **the most reliable I could find** and it does not use `process` env directly, which would cause browserify to include it into the build.\n",
  "readmeFilename": "Readme.md",
>>>>>>> 4d5d4f825458d1a31f0677618205bd759befa9d6
  "repository": {
    "type": "git",
    "url": "git+https://github.com/iliakan/detect-node.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "2.0.3"
}
